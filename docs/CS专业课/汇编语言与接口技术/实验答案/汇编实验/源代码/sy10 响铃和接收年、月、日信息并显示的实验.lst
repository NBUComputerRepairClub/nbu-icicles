Microsoft (R) Macro Assembler Version 6.11		    10/24/22 21:40:00
tempfile.asm						     Page 1 - 1


 0000				DATA  SEGMENT
 0000 57 68 61 74 20 69		  PKEY  DB 'What is the date(mm/dd/yyyy)',3FH,07H,13,10,'$'
       73 20 74 68 65 20
       64 61 74 65 28 6D
       6D 2F 64 64 2F 79
       79 79 79 29 3F 07
       0D 0A 24
 0021 0D 0A 0D 0A 54 68		  HINT  DB 13,10,13,10,'The date is $'
       65 20 64 61 74 65
       20 69 73 20 24
 0032  0064 [			  STRING  DB 100 DUP(0)  ;存放日期字符串
        00
       ]
 0096 69 6E 70 75 74 20		  ERROR DB 'input error$' 
       65 72 72 6F 72 24
 00A2				DATA  ENDS

 0000				STACK  SEGMENT
 0000  0080 [			  DW 128 DUP(0)
        0000
       ]
 0100				STACK  ENDS

 0000				CODE  SEGMENT
				  ASSUME    CS:CODE, DS:DATA, SS:STACK
 0000				START:
				  ;初始化段寄存器
 0000  B8 ---- R		  MOV AX, DATA
 0003  8E D8			  MOV DS, AX
 0005  8E C0			  MOV ES, AX

				; add your code here
 0007  8D 16 0000 R		  LEA DX, PKEY
 000B  B4 09			  MOV AH, 9
 000D  CD 21			  INT 21H         ; output string at ds:dx

 000F  B4 02			  MOV AH, 2       ;响铃
 0011  B2 07			  MOV DL, 7
 0013  CD 21			  INT 21H         ;用02号功能，输出一个BEL（ASCII码值为07H）字符

 0015  BB 0000			  MOV BX, 0

				  ;输入字符串
 0018  E8 0075			  CALL GETNUM ;获取日值
 001B  52			  PUSH DX
 001C  E8 0071			  CALL GETNUM ;获取月值
 001F  52			  PUSH DX
 0020  E8 006D			  CALL GETNUM ;获取年值
				  
 0023  8B C2			  MOV AX,DX
 0025  E8 004A			  CALL DISP11 ;显示年值
				  ;;;本来下面这句一直卡住 mov AX,02H,没改AH
 0028  B8 0200			  MOV AX,0200H
 002B  B2 2D			  MOV DL,'-'  ;输出字符‘-’
 002D  CD 21			  int 21H
				  
 002F  5A			  POP DX
 0030  8B C2			  MOV AX,DX ;DISP1 输出AX里内容
 0032  E8 0014			  CALL DISP1 ;显示月值
 0035  B8 0200			  MOV AX,0200H
 0038  B2 2D			  MOV DL,'-'  ;输出字符‘-’
 003A  CD 21			  int 21H
				  
 003C  5A			  POP DX
 003D  8B C2			  MOV AX,DX  ;;DISP1 输出AX里内容
 003F  B6 00			  MOV DH,00H ;DH，有值清零
 0041  E8 0005			  CALL DISP1 ;显示日值
				  
				  ;结束返回DOS
 0044  B8 4C00			  MOV AX,4C00H
 0047  CD 21			  INT 21H
				  
				  
				  ;函数
 0049				DISP1 PROC    near   ;输出2位16进制数
 0049  51				PUSH CX 
 004A  8A D8				MOV BL,AL ;AL当前要输出的数
 004C  8A D3				MOV DL,BL ;DL存当前要输出的数
 004E  B1 04				MOV CL,04
 0050  D2 C2				ROL DL,CL ;DL循环左移4位
 0052  80 E2 0F				AND DL,0FH ;DL保留低位
 0055  E8 000A				CALL DISPL ;输出第1个数字位
 0058  8A D3				MOV DL,BL ;DL存当前要输出的数
 005A  80 E2 0F				AND DL,0FH ;
 005D  E8 0002				CALL DISPL ;输出第二个数字位
 0060  59				POP CX
 0061  C3				RET
 0062				DISP1 ENDP

 0062				DISPL PROC    near   ;数字转字符，DL低四位保存需要输出的数
 0062  80 C2 30				ADD DL,30H
 0065  80 FA 3A				CMP DL,3AH
 0068  72 03				JB DDD
 006A  80 C2 27				ADD DL,27H
 006D				DDD:
 006D  B4 02				MOV AH,02H
 006F  CD 21				INT 21H	
 0071  C3				RET
 0072				DISPL ENDP

				;年有4位数，2次调用disp1
 0072				DISP11 PROC NEAR
 0072  52				PUSH DX
 0073  51				PUSH CX
 0074  53				PUSH BX
 0075  50				PUSH AX
					;调用2次
 0076  8A C4				MOV AL,AH ;先输出高位
 0078  E8 FFCE				CALL DISP1
 007B  58				POP AX
 007C  E8 FFCA				CALL DISP1
					
 007F  5B				POP BX
 0080  59				POP CX
 0081  5A				POP DX
 0082  C3				RET
 0083				DISP11 ENDP
				;换行函数
 0083				CRLF    PROC    near                      
 0083  B2 0D				MOV DL,0DH
 0085  B4 02			    MOV AH,02H
 0087  CD 21			    INT 21H       ;光标移到第一列              
 0089  B2 0A			    MOV DL,0AH
 008B  B4 02			    MOV AH,02H
 008D  CD 21			    INT 21H       ;光标移到下一行             
 008F  C3			    RET
 0090				CRLF ENDP


 0090				GETNUM  PROC    NEAR  ;键盘接收子程序，2个数值转换2进制存DL中。连续2次，上一次因为左移保留在DH
 0090  33 C0			  XOR     AX,AX
 0092				again:  ;AH＝01H，回车或空格结束
 0092  B4 01			  MOV     AH,01H ;01H号功能输入一个字符
 0094  CD 21			  INT 21H        ;键盘接收键盘码
 0096  3C 0D			  CMP AL,0DH     ;判回车键
 0098  74 33			  JZ  done
				  
 009A  3C 20			  CMP AL,20H     ;判空格键
 009C  74 2F			  JZ  done
				  ;判为 0 - 9 数字键,满足转换成二进制，存在AL
 009E  3C 30			  CMP AL,30H	 ;与'0'比较
 00A0  72 22			  JB  error0	 ;输入字符<'0',error
 00A2  2C 30			  SUB AL,30H	 ;字符转二进制数字-30H
 00A4  3C 0A			  CMP AL,0AH     ;并<10,判为 0 - 9 数字键
 00A6  72 14			  JB  GETS		 ;AL的值已转为数字，ascll码已处理变为2进制数值
				  ;判 A - F 字母键
 00A8  3C 11			  CMP AL,11H                  
 00AA  72 18			  JB  error0	 ;<'A',error
 00AC  2C 07			  SUB AL,07H	 ;字符转对应二进制数字-30-07H
 00AE  3C 0F			  CMP AL,0FH     ;判 A - F 字母键
 00B0  76 0A			  JBE GETS		 ;AL的值已成功转为数字，
				  ;判 a - f 字母键       
 00B2  3C 2A			  CMP AL,2AH	 ;与'a'比较
 00B4  72 0E			  JB  error0	 ;<'a',error
 00B6  3C 2F			  CMP AL,2FH     ;与'f'比较
 00B8  77 0A			  JA  error0	 ;>'f',error
 00BA  2C 20			  SUB AL,20H	 ;字符转对应数字-30-07-20H
				  
				  ;AL存储的就是输入字符对应的2进制数字，放入DX
 00BC				GETS:   
 00BC  B1 04			  MOV     CL,04H	;控制左移次数
 00BE  D3 E2			  SHL DX,CL      ;逻辑左移4位，空出4位，接上之前的
 00C0  02 D0			  ADD DL,AL      ;当前字符对应2进制数加入 DX 中
 00C2  EB CE			  JMP again		 ;输入下一个字符，判断转换
				  ;输入错误
 00C4  52			error0: PUSH    DX
 00C5  B4 09			  MOV AH,09
 00C7  BA 0096 R		  MOV DX,OFFSET ERROR
 00CA  CD 21			  INT 21H        ;显示输入错误提示信息
 00CC  5A			  POP DX
				  ;返回结果，并换行
 00CD  52			done:   PUSH    DX
				  ;CALL CRLF
 00CE  5A			  POP DX
 00CF  C3			  RET
 00D0				GETNUM  ENDP
				  
 00D0				CODE  ENDS
				END START; set entry point and stop the assembler.

				 










Microsoft (R) Macro Assembler Version 6.11		    10/24/22 21:40:00
tempfile.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODE . . . . . . . . . . . . . .	16 Bit	 00D0	  Para	  Private 
DATA . . . . . . . . . . . . . .	16 Bit	 00A2	  Para	  Private 
STACK  . . . . . . . . . . . . .	16 Bit	 0100	  Para	  Private 


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CRLF . . . . . . . . . . . . . .	P Near	 0083	  CODE	Length= 000D Public
DISP11 . . . . . . . . . . . . .	P Near	 0072	  CODE	Length= 0011 Public
DISP1  . . . . . . . . . . . . .	P Near	 0049	  CODE	Length= 0019 Public
DISPL  . . . . . . . . . . . . .	P Near	 0062	  CODE	Length= 0010 Public
  DDD  . . . . . . . . . . . . .	L Near	 006D	  CODE	
GETNUM . . . . . . . . . . . . .	P Near	 0090	  CODE	Length= 0040 Public
  again  . . . . . . . . . . . .	L Near	 0092	  CODE	
  GETS . . . . . . . . . . . . .	L Near	 00BC	  CODE	
  error0 . . . . . . . . . . . .	L Near	 00C4	  CODE	
  done . . . . . . . . . . . . .	L Near	 00CD	  CODE	


Symbols:

                N a m e                 Type     Value    Attr

ERROR  . . . . . . . . . . . . .	Byte	 0096	  DATA	
HINT . . . . . . . . . . . . . .	Byte	 0021	  DATA	
PKEY . . . . . . . . . . . . . .	Byte	 0000	  DATA	
START  . . . . . . . . . . . . .	L Near	 0000	  CODE	
STRING . . . . . . . . . . . . .	Byte	 0032	  DATA	

	   0 Warnings
	   0 Errors
