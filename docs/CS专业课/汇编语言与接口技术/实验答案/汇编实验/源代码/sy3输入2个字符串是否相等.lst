Microsoft (R) Macro Assembler Version 6.11		    11/07/22 17:41:11
tempfile.asm						     Page 1 - 1


 0000				data segment
					;定义提示信息的字符串
 0000 69 6E 70 75 74 20			MESS1 db 'input string1:',0DH,0AH,'$'
       73 74 72 69 6E 67
       31 3A 0D 0A 24
 0011 69 6E 70 75 74 20			MESS2 db 'input string2:',0DH,0AH,'$'
       73 74 72 69 6E 67
       32 3A 0D 0A 24
 0022 4D 41 54 43 48 2E			MESS3 db 'MATCH.',0DH,0AH,'$'
       0D 0A 24
 002B 4E 4F 20 4D 41 54			MESS4 db 'NO MATCH.',0DH,0AH,'$'
       43 48 2E 0D 0A 24
					
 0037 0A				MAXLEN1 db 10;定义string1
 0038 00				ACTLEN1 db ?  ;自动获得输入的长度
 0039  0009 [				string1 db 9 dup(?),'$'   ;实际存放字符串的地方
        00
       ] 24
					
 0043 0A				MAXLEN2 db 10;定义string2
 0044 00				ACTLEN2 db ?   ;自动获得输入的长度
 0045  0009 [				string2 db 9 dup(?),'$'  ;实际存放字符串的地方
        00
       ] 24
					
 004F 0A 0D 24				CRLF   DB  0AH, 0DH,'$'     ;换行符
 0052				data ends
				;定义栈段
 0000				stack segment stack 'stack'
 0000  0080 [				STA db 128 DUP(?)
        00
       ]
 = 0080					TOP EQU LENGTH STA
 0080				stack ends

 0000				code segment 
				ASSUME cs:code,ds:data,es:data,ss:stack
 0000				START: ;初始化相关段
 0000  B8 ---- R		        mov ax,data
 0003  8E D8			        mov ds,ax
 0005  8E C0			        mov es,ax
 0007  B8 ---- R		        mov ax,stack
 000A  8E D0			        mov ss,ax
 000C  BC 0080			        mov sp,TOP
				        
				        ;显示提示输入信息MESS1
 000F  8D 16 0000 R		        LEA DX,MESS1 
 0013  B4 09					MOV AH,09H
 0015  CD 21					INT 21H
				        ;接收字符串string1
 0017  8D 16 0037 R		        LEA DX,MAXLEN1                 
 001B  B4 0A					MOV AH, 0AH
 001D  CD 21					INT 21H
						
						;换行 
 001F  8D 16 004F R				LEA DX, CRLF                                    
 0023  B4 09					MOV AH, 09H							 
 0025  CD 21					INT 21H
				        ;调用STRSHOW宏显示提示信息MESS2
 0027  8D 16 0011 R		        LEA DX,MESS2
 002B  B4 09					MOV AH,09H
 002D  CD 21					INT 21H
				        ;接收字符串string2
 002F  8D 16 0043 R		        LEA DX,MAXLEN2           
 0033  B4 0A					MOV AH, 0AH
 0035  CD 21					INT 21H
				        
				        ;换行 
 0037  8D 16 004F R				LEA DX, CRLF                                    
 003B  B4 09					MOV AH, 09H							 
 003D  CD 21					INT 21H

						;比较2个字符串
 003F  8D 1E 0038 R		        LEA bx,ACTLEN1
 0043  8A 27			        mov ah,[bx] ;ah中存放string1的实际长度
 0045  8D 1E 0044 R		        LEA bx,ACTLEN2
 0049  8A 07			        mov al,[bx] ;al中存放string2的实际长度
 004B  2A E0			        sub ah,al;检查两个字符串长度是否一致
 004D  75 1A			        jnz nomatch
				        
 004F  8D 36 0039 R		        LEA SI,string1;取出字符串偏移量
 0053  8D 3E 0045 R		        LEA DI,string2
 0057  FC			        CLD; DF=0，向内存高地址增加
 0058  98			        CBW   ;AL向AH做符号扩展 AX，记录长度
				        
 0059  8B C8			        mov cx,ax ;记录比较次数
 005B  F3/ A6			        REPZ CMPSB  ;重复按位比较，一样零标志位为0
 005D  75 0A			        jnz nomatch
				        
 005F				match:;若匹配则输出提示信息MESS3
 005F  8D 16 0022 R		        LEA DX,MESS3
 0063  B4 09					MOV AH,09H
 0065  CD 21					INT 21H
 0067  EB 0A			        jmp done
 0069				nomatch:;若不匹配则输出提示信息MESS4
 0069  8D 16 002B R		        LEA DX,MESS4
 006D  B4 09					MOV AH,09H
 006F  CD 21					INT 21H
 0071  EB 00			        jmp done       
 0073				done:;
 0073  B8 4C00			        mov ax,4C00H
 0076  CD 21			        int 21H
 0078				code ends
				END START





Microsoft (R) Macro Assembler Version 6.11		    11/07/22 17:41:11
tempfile.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

code . . . . . . . . . . . . . .	16 Bit	 0078	  Para	  Private 
data . . . . . . . . . . . . . .	16 Bit	 0052	  Para	  Private 
stack  . . . . . . . . . . . . .	16 Bit	 0080	  Para	  Stack	  'STACK'	 


Symbols:

                N a m e                 Type     Value    Attr

ACTLEN1  . . . . . . . . . . . .	Byte	 0038	  data	
ACTLEN2  . . . . . . . . . . . .	Byte	 0044	  data	
CRLF . . . . . . . . . . . . . .	Byte	 004F	  data	
MAXLEN1  . . . . . . . . . . . .	Byte	 0037	  data	
MAXLEN2  . . . . . . . . . . . .	Byte	 0043	  data	
MESS1  . . . . . . . . . . . . .	Byte	 0000	  data	
MESS2  . . . . . . . . . . . . .	Byte	 0011	  data	
MESS3  . . . . . . . . . . . . .	Byte	 0022	  data	
MESS4  . . . . . . . . . . . . .	Byte	 002B	  data	
START  . . . . . . . . . . . . .	L Near	 0000	  code	
STA  . . . . . . . . . . . . . .	Byte	 0000	  stack	
TOP  . . . . . . . . . . . . . .	Number	 0080h	 
done . . . . . . . . . . . . . .	L Near	 0073	  code	
match  . . . . . . . . . . . . .	L Near	 005F	  code	
nomatch  . . . . . . . . . . . .	L Near	 0069	  code	
string1  . . . . . . . . . . . .	Byte	 0039	  data	
string2  . . . . . . . . . . . .	Byte	 0045	  data	

	   0 Warnings
	   0 Errors
